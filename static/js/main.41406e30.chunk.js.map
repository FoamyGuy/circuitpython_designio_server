{"version":3,"sources":["components/TopBar.js","components/ImagePanel.js","components/WebhooksDialog.js","App.js","Polotno_Key.js","reportWebVitals.js","index.js"],"names":["TopBar","props","store","Group","align","Alignment","LEFT","icon","minimal","href","leftIcon","id","placeholder","onClick","clickSave","className","this","feedbackIntent","feedbackHidden","feedback","RIGHT","showAIOButton","showWebhookDialogClick","target","style","fontSize","React","Component","PhotosPanel","observer","useState","images","setImages","loadImages","a","preloaded_images","image_objs","i","length","push","url","useEffect","height","display","flexDirection","onChange","e","marginBottom","getPreview","image","onSelect","pos","getImageSize","width","activePage","addElement","type","src","x","y","rowsNumber","isLoading","loadMore","WebhooksDialog","handleOpen","setState","isOpen","handleClose","state","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","usePortal","console","log","preview_webhook_url","setTimeout","$","val","signature_webhook_url","onClose","title","Classes","DIALOG_BODY","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","intent","Intent","SUCCESS","saveWebhooksClick","getDerivedStateFromProps","App","refHandlers","toaster","ref","render","input_data","Fragment","position","Position","TOP","DANGER","webhookDialogOpen","handleWebhooksDialogClose","data","clickSaveAIO","codepyHidden","creating","showWebhookDialog","uuid","sections","defaultSection","margin","flex","downloadButtonEnabled","pageControlsEnabled","ajax","method","done","resp","undefined","hasOwnProperty","toDataURL","JSON","stringify","toJSON","savedDesignJson","window","location","fail","error","responseJSON","createStore","key","setSize","ajaxSetup","beforeSend","xhr","settings","test","crossDomain","setRequestHeader","getCookie","loadJSON","parse","design_json","dir","pages","name","addPage","setScale","attr","DEFAULT_SECTIONS","CustomPhotos","Tab","Panel","splice","PhotosSection","on","_","isEqual","history","canUndo","forceUpdate","cookieValue","document","cookie","cookies","split","trim","substring","decodeURIComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.41406e30.chunk.js","sourcesContent":["import React from 'react';\nimport {observer} from 'mobx-react-lite';\nimport {\n    Button,\n    Navbar,\n    Alignment,\n    AnchorButton,\n    Divider,\n    Dialog,\n    Classes,\n    InputGroup,\n} from '@blueprintjs/core';\nimport FaGithub from '@meronex/icons/fa/FaGithub';\nimport FaQuestion from '@meronex/icons/fa/FaQuestion';\nimport DownloadButton from 'polotno/toolbar/download-button';\n\nimport {downloadFile} from 'polotno/utils/download';\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        //const inputRef = React.useRef();\n        this.store = props.store;\n\n    }\n\n    render() {\n        return (\n            <Navbar>\n                <Navbar.Group align={Alignment.LEFT}>\n                    <AnchorButton\n                        icon=\"new-object\"\n                        minimal\n                        href={\"/create/design/\"}\n                    >\n                        New\n                    </AnchorButton>\n                    <InputGroup\n                        leftIcon={\"tag\"}\n                        id={\"name_input\"}\n                        placeholder={\"Design Name\"}\n\n                    >\n\n                    </InputGroup>\n\n\n                    <Button\n                        icon=\"floppy-disk\"\n                        minimal\n                        onClick={() => {\n                            //const json = store.toJSON();\n                            this.props.clickSave();\n                        }}\n                    >\n                        Save\n                    </Button>\n                    {/*<Button\n                        icon=\"floppy-disk\"\n                        minimal\n                        onClick={() => {\n                            //const json = store.toJSON();\n                            this.props.clickSaveAIO();\n                        }}\n                    >\n                        Adafruit.IO\n                    </Button>*/}\n                    <span\n                        className={\"feedback-tag bp3-tag bp3-intent-\" + this.props.feedbackIntent + (this.props.feedbackHidden ? \" hidden\" : \"\")}>{this.props.feedback}</span>\n\n                </Navbar.Group>\n                <Navbar.Group align={Alignment.RIGHT}>\n                    {/*<AnchorButton\n                        icon=\"code\"\n                        minimal\n                        href={\"/codepy/design/u/\" + this.props.uuid + \"/\"}\n                        className={this.props.codepyHidden ? \"hidden\": \"\"}\n                    >\n                        Download code.py\n                    </AnchorButton>*/}\n\n                    {this.props.showAIOButton &&\n                    <Button\n                        minimal\n                        icon={\"cloud-upload\"}\n                        onClick={this.props.showWebhookDialogClick}\n                    >\n                        Setup Adafruit.io Webhooks\n                    </Button>}\n\n                    <AnchorButton\n                        minimal\n                        href=\"/list/designs/\"\n                        icon={\"layout-grid\"}\n                    >\n                        My Designs\n                    </AnchorButton>\n\n                    <AnchorButton\n                        minimal\n                        href=\"/docs/\"\n                        target=\"_blank\"\n                        icon={<FaQuestion className=\"bp3-icon\" style={{fontSize: '20px'}}/>}\n                    >\n                        Help\n                    </AnchorButton>\n\n                    <Divider/>\n                </Navbar.Group>\n            </Navbar>\n        );\n    }\n}\n\nexport default TopBar;","import {observer} from 'mobx-react-lite';\nimport {InputGroup} from \"@blueprintjs/core\";\nimport {getImageSize} from \"polotno/utils/image\";\nimport {ImagesGrid} from \"polotno/side-panel/images-grid\";\nimport {SectionTab} from \"polotno/side-panel/tab-button\";\n\n// import our own icon\nimport MdPhotoLibrary from \"@meronex/icons/md/MdPhotoLibrary\";\n\n\nimport React from 'react'\n\nconst PhotosPanel = observer(({store}) => {\n    const [images, setImages] = React.useState([]);\n\n    async function loadImages() {\n        const preloaded_images = [\n            \"adabot\", \"billie\", \"blinka\", \"cappy\",\n            \"connie\", \"gus\", \"hans\", \"mho\", \"minerva\",\n            \"ruby\", \"sparky\"];\n\n        const image_objs = [];\n        for (let i = 0; i < preloaded_images.length; i++){\n            //console.log(preloaded_images[i]);\n            image_objs.push({url: `/static/img/adafruit_${preloaded_images[i]}_emoji.png`});\n        }\n        //console.log(image_objs);\n        setImages(image_objs);\n    }\n\n    React.useEffect(() => {\n        loadImages();\n    }, []);\n\n    return (\n        <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n            <InputGroup\n                leftIcon=\"search\"\n                placeholder=\"Search...\"\n                onChange={(e) => {\n                    loadImages();\n                }}\n                style={{\n                    marginBottom: '20px',\n                }}\n            />\n            <p>Demo images: </p>\n            {/* you can create yur own custom component here */}\n            {/* but we will use built-in grid component */}\n            <ImagesGrid\n                images={images}\n                getPreview={(image) => image.url}\n                onSelect={async (image, pos) => {\n                    const {width, height} = await getImageSize(image.url);\n                    store.activePage.addElement({\n                        type: 'image',\n                        src: image.url,\n                        width,\n                        height,\n                        x: pos?.x || 0,\n                        y: pos?.y || 0,\n                    });\n                }}\n                rowsNumber={2}\n                isLoading={!images.length}\n                loadMore={false}\n            />\n        </div>\n    );\n});\nexport default PhotosPanel","import React from 'react';\nimport {InputGroup, Button, Classes, Dialog, Intent} from \"@blueprintjs/core\";\nimport $ from \"jquery\";\n\nclass WebhooksDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: this.props.isOpen,\n            autoFocus: true,\n            canEscapeKeyClose: true,\n            canOutsideClickClose: true,\n            enforceFocus: true,\n            usePortal: true,\n        }\n\n\n    }\n\n\n    static getDerivedStateFromProps = (props, state) => {\n        console.log(\"updating state from props\");\n        return {isOpen: props.isOpen};\n    }\n\n    handleOpen = () => this.setState({isOpen: true});\n\n    handleClose = () => {\n        this.setState({\n            isOpen: false,\n        });\n        this.props.handleClose();\n    }\n\n    render() {\n        console.log(\"url : \" + this.props.preview_webhook_url);\n        setTimeout(() => {\n            $(\"#preview_webhook_input\").val(this.props.preview_webhook_url);\n            $(\"#signature_webhook_input\").val(this.props.signature_webhook_url);\n        }, 200);\n        //\n        return (\n            <Dialog\n                className={\"\"}\n                icon=\"cloud-upload\"\n                onClose={this.handleClose}\n                title=\"Adafruit.io Webhook URLs\"\n                {...this.state}\n            >\n                <div className={Classes.DIALOG_BODY}>\n                    <p>\n                        Image Preview Feed\n                    </p>\n                    <InputGroup\n                        id={\"preview_webhook_input\"}\n                    />\n                    <br/>\n                    <p>\n                        Image Signature Feed\n                    </p>\n                    <InputGroup\n                        id={\"signature_webhook_input\"}\n                    />\n                </div>\n                <div className={Classes.DIALOG_FOOTER}>\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n\n                        <Button onClick={this.handleClose}>Close</Button>\n\n                        <Button\n                            intent={Intent.SUCCESS}\n                            onClick={() => {\n                                this.props.saveWebhooksClick();\n                                this.handleClose()\n                            }}\n                        >\n                            Save\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n        );\n    }\n}\n\nexport default WebhooksDialog;","import './App.css';\nimport Toolbar from 'polotno/toolbar/toolbar';\nimport ZoomButtons from 'polotno/toolbar/zoom-buttons';\nimport Workspace from 'polotno/canvas/workspace';\nimport {createStore} from 'polotno/model/store';\nimport {polotno_key} from './Polotno_Key'\nimport Topbar from './components/TopBar';\n\nimport PhotosPanel from \"./components/ImagePanel\"\nimport WebhooksDialog from \"./components/WebhooksDialog\";\nimport {PhotosSection} from 'polotno/side-panel/side-panel';\nimport $ from 'jquery';\nimport {SidePanel, DEFAULT_SECTIONS} from 'polotno/side-panel/side-panel';\nimport {SectionTab} from \"polotno/side-panel/tab-button\";\nimport React from \"react\";\nimport MdPhotoLibrary from \"@meronex/icons/md/MdPhotoLibrary\";\nimport {Icon, Position, Toaster, Intent} from '@blueprintjs/core';\nimport _ from \"lodash\";\n\n\nclass App extends React.Component {\n    refHandlers = {\n        toaster: (ref) => this.toaster = ref,\n    };\n\n    constructor(props) {\n        super(props);\n        console.log('starting the app...');\n\n        this.store = createStore({\n            key: polotno_key, // you can create it here: https://polotno.dev/cabinet/\n        });\n        this.store.setSize(240, 240);\n\n        this.state = {\n            feedback: \"Design Saved\",\n            feedbackIntent: \"success\",\n            feedbackHidden: true,\n            webhookDialogOpen: false,\n            savedDesignJson: {},\n        }\n        this.creating = true;\n\n\n    }\n\n    componentDidMount() {\n        this.input_data = $(\"#root\").data(\"props\");\n        //console.log(input_data.data.hello);\n        //console.dir(JSON.parse(input_data.data));\n        function csrfSafeMethod(method) {\n            // these HTTP methods do not require CSRF protection\n            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\n        }\n\n        console.log(\"ajax setup\");\n        $.ajaxSetup({\n            beforeSend: (xhr, settings) => {\n                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n                    // Only send the token to relative URLs i.e. locally.\n                    console.log(\"ajax setup\");\n                    xhr.setRequestHeader(\"X-CSRFToken\", this.getCookie('csrftoken'));\n                }\n            }\n        });\n\n\n        console.log(this.input_data);\n        if (this.input_data !== undefined &&\n            this.input_data.data.hasOwnProperty(\"design_json\")) {\n            this.creating = false;\n\n            //console.log(input_data.data.design_json);\n\n            console.log(this.store.activePage);\n\n            // load page from context\n            this.store.loadJSON(JSON.parse(this.input_data.data.design_json));\n            console.dir(this.store.pages);\n            console.log(this.store.activePage.id);\n            $(\"#name_input\").val(this.input_data.data.name);\n            this.setState({savedDesignJson: this.store.toJSON()});\n\n\n        } else {\n            this.creating = true;\n            // empty page if nothing to load\n            this.store.addPage();\n            this.setState({savedDesignJson: this.store.toJSON()});\n        }\n\n\n        //this.store.setScale(3);\n        //console.log('zoom is', this.store.scale);\n\n\n        setTimeout(() => {\n            this.store.setScale(1.5);\n        }, 300);\n\n\n        setTimeout(function () {\n            $(\".credit span a\").attr(\"target\", \"_blank\");\n        }, 2000);\n\n        this.sections = DEFAULT_SECTIONS;\n        console.log(\"sections: \");\n        console.log(DEFAULT_SECTIONS);\n\n        // define the new custom section\n\n        const CustomPhotos = {\n            name: 'adafruit',\n            Tab: (props) => (\n                <SectionTab name=\"Adafruit\" {...props}>\n                    <MdPhotoLibrary/>\n                </SectionTab>\n            ),\n            Panel: PhotosPanel,\n        };\n        this.sections.splice(1, 0, CustomPhotos);\n\n        PhotosSection.Tab = (props) => (\n            <SectionTab name=\"Unsplash\" {...props}>\n                <Icon icon=\"media\"/>\n            </SectionTab>\n        );\n\n        $(window).on(\"beforeunload\", () => {\n            console.log(\"state in beforeunload\");\n            console.dir(this.state.savedDesignJson);\n            console.log(\"----\")\n            console.dir(this.store.toJSON());\n            console.log(\"json has changed ? \" + !_.isEqual(this.state.savedDesignJson, this.store.toJSON()));\n            console.log(\"history\");\n            console.log(this.store.history.canUndo);\n            if (!_.isEqual(this.state.savedDesignJson, this.store.toJSON())) {\n                return \"Are you sure to leave? There is unsaved worked.\";\n            }\n        });\n\n\n        //removeSection(sections, \"size\");\n        //addSection(sections, ResizePanel, 5);\n\n        this.forceUpdate();\n    }\n\n    render = () => {\n        console.log(\"input data inside render\");\n        console.log(this.input_data)\n        return (\n            <React.Fragment>\n                <Toaster\n                    position={Position.TOP}\n                    ref={this.refHandlers.toaster}\n                    intent={Intent.DANGER}\n                />\n                <WebhooksDialog\n                    isOpen={this.state.webhookDialogOpen}\n                    saveWebhooksClick={this.saveWebhooksClick}\n                    handleClose={this.handleWebhooksDialogClose}\n                    preview_webhook_url={this.input_data ? this.input_data.data.preview_webhook_url : \"\"}\n                    signature_webhook_url={this.input_data ? this.input_data.data.signature_webhook_url : \"\"}\n                />\n                <Topbar store={this.store}\n                        clickSave={this.clickSave}\n                        clickSaveAIO={this.clickSaveAIO}\n                        feedbackHidden={this.state.feedbackHidden}\n                        feedbackIntent={this.state.feedbackIntent}\n                        feedback={this.state.feedback}\n                        codepyHidden={this.creating}\n                        showWebhookDialogClick={this.showWebhookDialog}\n                        uuid={!this.creating ? this.input_data.data.uuid : \"\"}\n                        showAIOButton={!this.creating}\n                />\n                <div\n                    style={{\n                        display: 'flex',\n                        height: '92vh',\n                        width: '100vw',\n                    }}\n                >\n                    <div style={{width: '400px', height: '100%', display: 'flex'}}>\n                        <SidePanel store={this.store} sections={this.sections} defaultSection=\"adafruit\"/>\n                    </div>\n                    <div\n                        style={{\n                            display: 'flex',\n                            height: '100%',\n                            margin: 'auto',\n                            flex: 1,\n                            flexDirection: 'column',\n                            position: 'relative',\n                        }}\n                    >\n                        <Toolbar store={this.store} downloadButtonEnabled={true}/>\n                        <Workspace store={this.store} pageControlsEnabled={false}/>\n                        <ZoomButtons store={this.store}/>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    getCookie(name) {\n        var cookieValue = null;\n        if (document.cookie && document.cookie != '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = $.trim(cookies[i]);\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) == (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    saveWebhooksClick = () => {\n        console.log(\"click save webhooks\");\n        console.log($(\"#preview_webhook_input\").val());\n        console.log($(\"#signature_webhook_input\").val());\n        $.ajax({\n            method: \"POST\",\n            url: \"/update/design/\" + this.input_data.data.id + \"/webhooks/\",\n            data: {\n                \"preview_webhook\": $(\"#preview_webhook_input\").val(),\n                \"signature_webhook\": $(\"#signature_webhook_input\").val()\n            }\n        }).done((resp) => {\n            this.input_data.data[\"preview_webhook_url\"] = $(\"#preview_webhook_input\").val();\n            this.input_data.data[\"signature_webhook_url\"] = $(\"#signature_webhook_input\").val();\n            console.log(resp);\n\n        });\n    }\n\n    handleWebhooksDialogClose = () => {\n        this.setState({\n            webhookDialogOpen: false\n        })\n    }\n\n    showWebhookDialog = () => {\n        console.log(\"showing webhook dialog\");\n        this.setState({webhookDialogOpen: true}, () => {\n            console.log(this.state.webhookDialogOpen);\n        });\n\n    }\n\n    clickSave = () => {\n        //console.log(props.hello);\n        //console.dir(store);\n        console.log(\"clicked save\");\n        //console.log(store.toJSON());\n        //console.log(store.toDataURL());\n\n        if ($(\"#name_input\").val() !== \"\") {\n            // create new design\n            if (this.input_data === undefined || !this.input_data.data.hasOwnProperty(\"id\")) {\n                //this.topBar.current.setState({\"hidden\": false, \"feedback\": \"Hello World\", \"feedbackIntent\": \"danger\"});\n                //this.setState({hidden: false})\n                $.ajax({\n                    method: \"POST\",\n                    url: \"/create_design/\",\n                    data: {\n                        \"image_base64\": this.store.toDataURL(),\n                        \"json\": JSON.stringify(this.store.toJSON()),\n                        \"name\": $(\"#name_input\").val()\n                    }\n                }).done((resp) => {\n\n                    this.setState({\n                        feedbackHidden: false,\n                        feedbackIntent: \"success\",\n                        feedback: \"Design created successfully\",\n                        savedDesignJson: this.store.toJSON()\n                    });\n                    setTimeout(() => {\n                        this.setState({feedbackHidden: true});\n                        window.location = resp['view_design_url']\n                    }, 3000);\n                    console.log(resp);\n                }).fail((error) => {\n                    this.setState({\n                        feedbackHidden: false,\n                        feedbackIntent: \"danger\",\n                        feedback: error.responseJSON.error\n                    });\n                });\n            } else {\n                // update existing design\n                $.ajax({\n                    method: \"POST\",\n                    url: \"/update/design/\" + this.input_data.data.id + \"/\",\n                    data: {\n                        \"image_base64\": this.store.toDataURL(),\n                        \"json\": JSON.stringify(this.store.toJSON()),\n                        \"name\": $(\"#name_input\").val()\n                    }\n                }).done((resp) => {\n                    this.setState({\n                        feedbackHidden: false,\n                        feedbackIntent: \"success\",\n                        feedback: \"Design saved successfully\"\n                    });\n                    console.log(resp);\n                    setTimeout(() => {\n                        this.setState({feedbackHidden: true});\n                    }, 3000);\n                });\n            }\n        } else {\n            this.setState({\n                feedbackHidden: false,\n                feedbackIntent: \"danger\",\n                feedback: \"Design Name cannot be blank\"\n            });\n            setTimeout(() => {\n                this.setState({feedbackHidden: true});\n            }, 3000);\n\n            // this.toaster.show({\n            //     message: \"Name Cannot be Empty\",\n            //     intent: Intent.DANGER,\n            // });\n\n            console.log(\"please fill in name\");\n        }\n\n    }\n\n    clickSaveAIO = () => {\n        //console.log(props.hello);\n        //console.dir(store);\n        console.log(\"clicked save\");\n        //console.log(store.toJSON());\n        //console.log(store.toDataURL());\n\n        // create new design\n        if (this.input_data === undefined || !this.input_data.data.hasOwnProperty(\"id\")) {\n\n        } else {\n            console.log(this.store.toDataURL());\n            // update existing design\n            $.ajax({\n                method: \"POST\",\n                url: \"/upload_aio/design/\" + this.input_data.data.id + \"/\",\n                data: {\n                    \"image_base64\": this.store.toDataURL(),\n                    \"json\": JSON.stringify(this.store.toJSON()),\n                    \"name\": $(\"#name_input\").val()\n                }\n            }).done((resp) => {\n                this.setState({\n                    feedbackHidden: false,\n                    feedbackIntent: \"success\",\n                    feedback: \"Design saved successfully\"\n                });\n                console.log(resp);\n                setTimeout(() => {\n                    this.setState({feedbackHidden: true});\n                }, 3000);\n            });\n        }\n    }\n}\n\nexport default App;\n\n\n","export const polotno_key = \"urccVCzsiJVAkwUNpR_y\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}